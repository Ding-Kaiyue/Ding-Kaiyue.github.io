[{"title":"Hello World","url":"/2025/10/24/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"如何使用自定义控制器注册机制","url":"/2025/10/23/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E5%88%B6%E5%99%A8%E6%B3%A8%E5%86%8C%E6%9C%BA%E5%88%B6/","content":"这里是关于如何使用自定义控制器注册机制的详细说明。\n1. 自定义控制器注册机制概述在ROS2中，控制器管理器（Controller Manager）负责管理控制器的生命周期，包括控制器的创建、启动、停止和销毁。为了实现控制器的可扩展性和可重用性，ROS2引入了自定义控制器注册机制，允许用户自定义控制器类型，并将其注册到控制器管理器中。\n","categories":["控制架构篇-从模式到工厂"],"tags":["C++","ROS2","工厂模式"]}]